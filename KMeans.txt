import matplotlib.pyplot as plt
from sklearn import datasets
from sklearn.cluster import KMeans
import pandas as pd
import numpy as np

iris=datasets.load_iris()
x=pd.DataFrame(iris.data)
x.columns=['Sepal_Length','Sepal_Width','Petal_Length','Petal_Width']
y=pd.DataFrame(iris.target)
y.columns=['Targets']

model=KMeans(n_clusters=3)
model.fit(x)

plt.figure(figsize=(14,14))
colormap=np.array(['red','lime','black'])

plt.subplot(1,1,1)
plt.scatter(x.Petal_Length,x.Petal_Width,c=colormap[y.Targets],s=5)
plt.title('Real Cluster')
plt.xlabel('petal_length')
plt.ylabel('petal_width')
plt.show()

plt.subplot(1,1,1)
plt.scatter(x.Petal_Length,x.Petal_Width,c=colormap[model.labels_],s=5)
plt.title('KMeans Clustering')
plt.xlabel('petal_length')
plt.ylabel('petal_width')
plt.show()

from sklearn import preprocessing

scaler=preprocessing.StandardScaler()
scaler.fit(x)
xsa=scaler.transform(x)
xs=pd.DataFrame(xsa,columns=x.columns)

from sklearn.mixture import GaussianMixture

gmm=GaussianMixture(n_components=3)
gmm.fit(xs)
gmm_y=gmm.predict(xs)
plt.subplot(1,1,1)
plt.scatter(x.Petal_Length,x.Petal_Width,c=colormap[gmm_y],s=5)
plt.title('GMM Clustering')
plt.xlabel('petal_length')
plt.ylabel('petal_width')
plt.show()

print('Observation:The GMM using EM Algo based clustering matched the true labels more closely than the KMeans')